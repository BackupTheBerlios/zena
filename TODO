== MOST IMPORTANT:
* use connection.quote !!!

== Todo

* TEST: destroy:
  * page
  * document
  * image
  * template

****** FIXME: visitor.lang should never be empty or bad. set 'lang' in participation ?
Post ====> VirtualClass
Letter ==> VirtualClass
Tag  ==> VirtualClass ?
Tracker => VirtualClass

* replace 'link_to_remote, :method => post/put' by 'button_to_remote'
* make application_helper 'img_tag' use virtual_classes's icon. or superclass's icon....
* open calendar : use stored zafu and pass template_url as argument instead of all find,date,(_tiny.rhtml)
* if mksite fails (password too short, etc): rollback !
* What if a Note/Contact contains pages and one of these pages has 'custom_base' set ?
* Replace Trans... with Gettext
* BUG: flash not working in UsersController when updating preferences.
* (BUG): a user in many sites: where is this user's "contact" node ? One for each site ? Alias ? Alias seems a good choice.
* BUG: when move, update inherited rights from new parent.
* update 'deploy.rb' for multisite and update mksite for 'cap' context
* create site = transaction (or do a rollback)
* move all input tags into <p> w3c xhtml !
* try Zena without javascript
* force 1 user = 1 contact :
  # either create new contact or use existing contact
  # store new contacts into (select parent when create) with admin/admin/admin rights, owner = user.
  # comment users ?
* expire old pages when changing 'custom_base'
* move 'admin' layout into 'templates' (use root skin ?, user skin ?)
* !! DO NOT PUT 'PATH TO FILES' IN ZENA.rb
* !! TRY TO KEEP ONLY ONE CONFIGURATION FILE, LOADED BY environment/...
* !! BUG WITH DISCUSSION REMOVE: not working
* deletion of node
* popup 'drive' should show vertical scroll bar...
* traduire le texte de base pour l'aide en anglais
* APPLICATION_TEST : should use same testing as application_helper...
* PATH_LINKS: correct and try to find some way to cache the base in project ?
* is app/views/node/_tags used ?
* multiversion: version finder: why use lang = ? Testing needed : example : I have a new page, with a redaction in 'en'. I navigate in 'fr' I am in no group: the version never shows up and BANG !
* open/close note: the :as option should be worked out in zazen, when using limit to get the text.
* 'delete' a node (Zena::Status[:del]) => rubish bin
* cached pages do not consider passing time (future publish_from dates)
* finish diff with selection on version number
Ideas for cached menu: 
  a. expire less often
  b. build with 1 cache for each sub-menu
  c. expire by hand
  d. keep only one menu with public rights for all users
  e. sub-menu : only children with same read_group ==> cache on this group.
* We should use attr_protected instead of filtering forms.
* Remove all .utc (now using ENV['TZ'])
* Provide a 'grows with zena' // 'runs with zena' logo and link
* Provide a link from zena to teti.ch
=== Optimization & Cache
* sweep public page cache :
  * page for all lang
  * project for all lang
  * old links & new links
* on destroy : remove all (including document files)
* why not use 'action' caching instead ?
=== Misc
* replace rmagick with a more simple library or use something like system "convert #{escape(temp)} -resize 48x48! #{escape(target)}"
* show_title could guess when to display a title and when not to
* why are '&' in the url escaped if escape => false is not set ??? (versions/edit.rhtml)
=== Documentation
* cleanup README_FOR_APP
* cleanup

== Enhancements
=== Optimizations
* remove all secure(...) on non Node/User objects.
class << Thread.current
  attr_accessor :visitor
end
Thread.current.visitor = ...
def visitor
  Thread.current.visitor
end
=== Zazen
* code to show table of contents (with depth option)
* how do footnotes work with textile ?
* user_menu with favorites
=== Forms
* could we use 'form_for' for preferences and simple things ?
=== Views
* split zen.css, admin.css, comments.css into
  * actions.css  <== small buttons and stuff (should never be changed)
  * admin.css    <== administration boxes
  * zen.css      <== layout style
  * comments.css <== comment style
* view archive... & search tool
* contact search/list page
=== Security
* How do we avoid someone removing the wiki as a whole ? +can_destroy+ will have to look for publish access in the parent.
* Implement salt login with client side JS : http://pajhome.org.uk/crypt/md5/
=== Error messages
* translate flash 'notice' and 'error', with clever '%s'. Translate error messages (message and field name)
=== Site
* user access to site configuration
=== Translations
* load new languages from the web interface

=== Cleanup tool
* root node check :
** parent_id = NULL, section_id = id, project_id = id
* spread section and project id...