<div id='form_errors' class='errors'><%= error_messages_for "node" %></div>
<div id='search'><%= search_box %></div>

<div class='selector'>
  <% (partial = form_tabs).each_index do |i| %><div id='<%= partial[i][0] %>_sel' <%= i == 0 ? "class='selected'" : "" %>><%= tlink_to_function(partial[i][0], "select_tab('#{partial[i][0]}');") %></div><% end %>
</div>

<div class='tab'>
  <% if @node.kind_of?(Document) -%>
    <%= start_form_tag({ :action => "save", :controller=>'version', :rnd=>rnd }, :id => "node_form", :multipart=>true ) %>
  <% else -%>
    <%= start_form_tag({ :action => "save", :controller=>'version' }, :id => "node_form" ) %>
  <% end -%>

  <%= hidden_field 'node', 'v_lang', :value=>@node.v_lang %>
  <%= hidden_field 'node', 'id' %>
  <%= hidden_field 'node', 'v_id' %>
  <div class='validate'>
    <div><input type="submit" onclick="$('loader').style.visibility = 'visible';" value='<%= transb('validate') %>'/></div>
    <div><%= submit_to_remote('save', transb('save'), :url=>{:action => 'save_text', :controller=>'version', :id=>@node[:id]}) %></div>
    <div><a href='#' onclick='uploader=window.open("<%= url_for :controller=>'document', :action=>'new', :parent_id=>@node %>", "uploader", "location=1,width=400,height=300");uploader.opener = opener;return false;'><%= transb('btn_add_document')%></a></div>
    <div class='readers'><label for='readers'><%= trans('readers :') %></label>
    <p><%= readers_for(@node) %></p></div>
  </div>
<% partial.each_index do |i| %><div id='<%= partial[i][0] %>_tab' <%= i == 0 ? "" : "style='display:none;'" %> class='tab_content'>
  <%= render :partial=>"templates/edit_tabs/#{partial[i][1]}" %>
</div><% end %>

<%= end_form_tag %>
</div>

<%#= css_edit %>
<%= javascript_start %>
var current_tab = $('<%= partial[0][0] %>_tab');
var current_sel = $('<%= partial[0][0] %>_sel');
function select_tab(name) {
  var obj = $(name+'_tab');
  var obj_sel = $(name+'_sel');
  current_tab.style.display = 'none';
  current_sel.className = '';
  current_tab = obj;
  current_sel = obj_sel;
  current_tab.style.display = '';
  current_sel.className = 'selected';
}
new Form.Observer('node_form', 3, function(element,value){ opener.Zena.editor_preview(element,value)});
Event.observe(window, 'resize', function() { Zena.resizeElement('node_v_text'); } );
function popup_loaded() {
  Zena.resizeElement('node_v_text');
  new Zena.Div_editor('edit_img', 'posx', 'posy', 'width', 'height',<%= @node.c_width / @node.c_width('edit').to_f %>, 30, 200);
}
<%= javascript_end %>