default:
  context:
    node_name: '@node'
    node: 'cleanWater'
    visitor: 'ant'

ml_title_where:
  src: "nodes where title like 'Etat%' in site"
  sql: "%Q{SELECT nodes.* FROM idx_nodes_ml_strings,nodes WHERE #{secure_scope('nodes')} AND idx_nodes_ml_strings.value LIKE 'Etat%' AND idx_nodes_ml_strings.lang = 'fr' AND idx_nodes_ml_strings.key = 'title' AND idx_nodes_ml_strings.node_id = nodes.id GROUP BY nodes.id ORDER BY nodes.position ASC, nodes.node_name ASC}"
  res: 'status'

ml_title_where_with_or:
  src: "nodes where title like 'Etat%' or class = Letter in site"
  sql: "%Q{SELECT nodes.* FROM idx_nodes_ml_strings,nodes WHERE #{secure_scope('nodes')} AND ((idx_nodes_ml_strings.value LIKE 'Etat%' AND idx_nodes_ml_strings.lang = 'fr' AND idx_nodes_ml_strings.key = 'title' AND idx_nodes_ml_strings.node_id = nodes.id) OR (nodes.kpath = 'NNL' AND idx_nodes_ml_strings.node_id = 0)) GROUP BY nodes.id ORDER BY nodes.position ASC, nodes.node_name ASC}"
  res: 'letter, status'

name_where:
  src: "base_contacts where name like 'Inv%' in site"
  sql: "%Q{SELECT nodes.* FROM idx_nodes_strings,nodes WHERE #{secure_scope('nodes')} AND idx_nodes_strings.value LIKE 'Inv%' AND idx_nodes_strings.key = 'name' AND idx_nodes_strings.node_id = nodes.id AND nodes.kpath LIKE 'NRC%' GROUP BY nodes.id ORDER BY nodes.position ASC, nodes.node_name ASC}"
  res: 'ant'

# TODO: Only implement with a proper use case. Ref [#190]
#       this is really more complex then it seems if we do not want too bad performance. Easiest way:
#       NOT EXISTS (SELECT 'x' FROM idx_nodes_ml_strings AS im WHERE im.node_id = nodes.id AND im.key = 'title' AND im.lang = 'fr')
# indexed_value_is_null:
#   src: "projects where title is null in site"
#   sql: "%Q{SELECT nodes.* FROM idx_nodes_ml_strings,nodes WHERE #{secure_scope('nodes')} AND idx_nodes_ml_strings.value IS NULL AND idx_nodes_ml_strings.key = 'title' AND idx_nodes_ml_strings.node_id = nodes.id AND nodes.kpath LIKE 'NPP%' GROUP BY nodes.id ORDER BY nodes.position ASC, nodes.node_name ASC}"
#   res: "wiki, zena"

ml_title_order:
  context:
    node: 'cleanWater'
  src: "pages in site order by title asc limit 7"
  sql: "%Q{SELECT nodes.* FROM idx_nodes_ml_strings,nodes WHERE #{secure_scope('nodes')} AND idx_nodes_ml_strings.lang = 'fr' AND idx_nodes_ml_strings.key = 'title' AND idx_nodes_ml_strings.node_id = nodes.id AND nodes.kpath LIKE 'NP%' GROUP BY nodes.id ORDER BY idx_nodes_ml_strings.value ASC LIMIT 7}"
  res: "wiki, art, cleanWater, collections, crocodiles, default, status"


ml_title_filter_in_relation:
  src: "references where title = 'important'"
  sql: "/idx_nodes_ml_strings,links,nodes.*value = 'important'.*lang = 'fr'.*key = 'title'.*nodes.id = links.target_id.*source_id = \?/"
  res: ""
