default:
  context:
    lang: 'en'
    visitor: 'ant'
    node: 'status'
  src: "simple text"
  tem: "simple text"
  res: "simple text"

logout_link:
  context:
    # Forces NodesController type of url and params
    fake_controller: 'nodes'
  src: "<r:login_link/>"
  res: '<a href="/logout?redirect=%2Fen%2Fprojects%2FcleanWater%2Fpage22.html">logout</a>'

login_link:
  context:
    visitor: 'anon'
    # Forces NodesController type of url and params
    fake_controller: 'nodes'
  src: "<r:login_link/>"
  res: '<a href="/oo/projects/cleanWater/page22.html">login</a>'

logout_link_other_controller:
  src: "<r:login_link/>"
  res: '<a href="/logout">logout</a>'

login_link_other_controller:
  context:
    visitor: 'anon'
  src: "<r:login_link/>"
  res: '<a href="/login">login</a>'

login_link_with_blocks:
  src: "<r:login_link>ONE ONE<r:else do='node_name'/></r:login_link>"
  res: "<a href='/logout'>status</a>"

login_link_with_blocks_not_logged_in:
  context:
    visitor: 'anon'
  src: "<r:login_link><r:title/><r:else do='node_name'/></r:login_link>"
  res: "<a href='/login'>status title</a>"

visitor_link_not_logged_in:
  context:
    visitor: anon
  src: "*<p do='visitor_link'/>*"
  res: "**"

visitor_link:
  src: "<p do='visitor_link'/>"
  res: "<p><a href=\"/users/440568585\">Solenopsis Invicta</a></p>"

visitor_link_blocks_not_logged_in:
  context:
    visitor: anon
  src: "*<p do='visitor_link'><r:visitor do='login'/></p>*"
  res: "**"

visitor_link_blocks:
  src: "<p do='visitor_link'><r:visitor do='login'/><p>"
  res: "<p><a href='/users/440568585'>ant<p></a></p>"

action:
  src: "<p do='action' select='edit' do='t'>hello</p>"
  res: "/nodes/22/versions/0/edit.*Open the edition window to edit the node.*Zena.open_window/"

swap_in_each:
  src: "<r:pages><li do='each'><span do='swap' attr='origin' states='todo,done,alert'/></li></r:pages>"
  tem: "/\"node\[origin\]\" => \"#\{next_in_list_s\(var2.prop\['origin'\], \"todo,done,alert\"/"

hand_made_swap:
  src: "<r:link update='_page' node[origin]='#{next_in_list(origin, \"todo,done\")}' action='update'/>"
  tem: "/:_method => .put., :.node\[origin\]. => .#\{next_in_list_s\(@node.prop\['origin'\], .todo,done.\)/"