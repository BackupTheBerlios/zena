default:
  context:
    node_name: '@node'
    node: 'cleanWater'
    visitor: 'ant'
  src: "nodes where log_at = event_at in site"
  sql: "SELECT nodes.* FROM nodes WHERE nodes.log_at = nodes.event_at AND (#{@node.secure_scope('nodes')}) ORDER BY position ASC, name ASC"
  
version_filter:
  src: "nodes where v_title like 'P%' in site"
  sql: "SELECT DISTINCT nodes.* FROM nodes,versions WHERE versions.title LIKE 'P%' AND nodes.id = versions.node_id AND (#{@node.secure_scope('nodes')}) ORDER BY nodes.position ASC, nodes.name ASC"
  res: "opening, Page-changes, people, Project-changes-xml, projects, proposition"

dynattr_filter:
  src: "nodes where d_assigned = 'gaspard' in site"
  sql: "SELECT DISTINCT nodes.* FROM nodes,versions LEFT JOIN dyn_attributes ON versions.id = dyn_attributes.owner_id WHERE dyn_attributes.value = 'gaspard' AND dyn_attributes.key = 'assigned' AND nodes.id = versions.node_id AND (#{@node.secure_scope('nodes')}) ORDER BY nodes.position ASC, nodes.name ASC"
  res: "cleanWater, people, status"

# Results can be wrong if a node has many 'versions', some of which have d_assigned set and others not. See #190.
dynattr_filter_is_null:
  src: "projects where d_assigned is null in site"
  sql: "SELECT DISTINCT nodes.* FROM nodes,versions LEFT JOIN dyn_attributes ON versions.id = dyn_attributes.owner_id AND dyn_attributes.key = 'assigned' WHERE nodes.kpath LIKE 'NPP%' AND dyn_attributes.value IS NULL AND nodes.id = versions.node_id AND (#{@node.secure_scope('nodes')}) ORDER BY nodes.position ASC, nodes.name ASC"
  res: "wiki, zena"