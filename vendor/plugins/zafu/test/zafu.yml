empty:
  in: ""
  out: ""

hello:
  in: "<z:hello/>"
  out: "hello world!"

double_hello:
  in: "<z:hello/> <z:hello/>"
  out: "hello world! hello world!"

hello_skip_content:
  in: "<z:hello>I want to live forever</z:hello>"
  out: "hello world!"

tag_not_closed:
  in: "this is <z:test super='life' is = \"fine\""
  out: "this is <z:test super='life' is = \"fine\""

hello_not_closed:
  in: "I say <z:hello>blah blah"
  out: "I say hello world!"

test:
  in: "this <z:test>is a test</z:test> <z:hello/>"
  out: "this [test:|]is a test[/test] hello world!"
  
very_messy:
  in: "this <z: blah> </z:truc> whak"
  out: "this <z: blah> <span class='zafu_error'>&lt;/z:truc&gt;</span> whak"

bad_closing_tag:
  in: "this <z:test>looks </z:truc> ok"
  out: "this [test:|]looks <span class='zafu_error'>&lt;/z:truc&gt;</span>[/test] ok"
  
expand_with:
  in: "this <z:test>looks </z:test> ok"
  out: "this [test:|]looks [/test] ok"
  
params:
  in: "some <z:test good='choice' nice='work'>things</z:test> are fine"
  out: "some [test:good=>'choice', nice=>'work'|]things[/test] are fine"

default_menu:
  in: "the <z:test>menu</z:test> is nice"
  out: "the [test:|]menu[/test] is nice"
  
include_menu:
  in: "include_menu: <z:include template='/default/menu'/>"
  out: "include_menu: the [test:|]menu[/test] is nice"

include_context:
  in: "include_context: <z:include template='menu'/>"
  out: "include_context: include_menu: the [test:|]menu[/test] is nice"

infinite_loop:
  in: "<z:include template='/infinite/loop'/>"
  out: "<span class='zafu_error'>[include error: /infinite/loop --&gt; /infinite/loop ]</span>"
  
infinite_foo:
  in: "<z:include template='bar'/>"
  out: "<span class='zafu_error'>[include error: /infinite/foo --&gt; /infinite/bar --&gt; /infinite/foo ]</span>"
  
infinite_bar:
  in: "<z:include template='foo'/>"
  out: "<span class='zafu_error'>[include error: /infinite/bar --&gt; /infinite/foo --&gt; /infinite/bar ]</span>"
  
other_context:
  in: "from other: <z:include template='menu'/> and <z:include template='/include/menu'/>"
  out: "from other: the [test:|]menu[/test] is nice and include_menu: the [test:|]menu[/test] is nice"

context:
  in: "out:<z:test/> <z:context truc='machin'>in:<z:test/></z:context> out:<z:test/>"
  out: "out:[test:|/] in:[test:|truc=>'machin'/] out:[test:|/]"
  
nested_context:
  in: "<z:context var1='out' var2='foo'>1:<z:test/><z:context var1='in'>2:<z:test/></z:context>3:<z:test/></z:context>"
  out: "1:[test:|var1=>'out', var2=>'foo'/]2:[test:|var1=>'in', var2=>'foo'/]3:[test:|var1=>'out', var2=>'foo'/]"
